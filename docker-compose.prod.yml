version: "3.9"

services:
  traefik:
    image: traefik:v2.11
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --certificatesresolvers.godaddy.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.godaddy.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.godaddy.acme.dnschallenge=true
      - --certificatesresolvers.godaddy.acme.dnschallenge.provider=godaddy
    ports:
      - "80:80"
      - "443:443"
    environment:
      - GODADDY_API_KEY=${GODADDY_API_KEY}
      - GODADDY_API_SECRET=${GODADDY_API_SECRET}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - web
    restart: unless-stopped

  backend:
    build: ./backend
    env_file:
      - ./backend/.env
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`demo.tryklaris.ai`) && PathPrefix(`/api`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls.certresolver=godaddy
      - traefik.http.middlewares.api-strip.stripprefix.prefixes=/api
      - traefik.http.routers.api.middlewares=api-strip
      - traefik.http.services.api.loadbalancer.server.port=8000
    depends_on:
      - db
    networks:
      - web
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        - REACT_APP_API_URL=https://demo.tryklaris.ai/api
    labels:
      - traefik.enable=true
      - traefik.http.routers.front.rule=Host(`demo.tryklaris.ai`)
      - traefik.http.routers.front.entrypoints=websecure
      - traefik.http.routers.front.tls.certresolver=godaddy
      - traefik.http.services.front.loadbalancer.server.port=80
    depends_on:
      - backend
    networks:
      - web
    restart: unless-stopped

  db:
    image: ankane/pgvector:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-klaris}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-klaris}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - web
    restart: unless-stopped

volumes:
  traefik_letsencrypt:
  pg_data:

networks:
  web:
    driver: bridge


